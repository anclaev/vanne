version: '2'
services:
  client:
    container_name: vanne-client
    image: vanne-client:prod
    restart: always
    depends_on:
      - core
    environment:
      - VIRTUAL_HOST=vanne.uno
      - LETSENCRYPT_HOST=vanne.uno
      - VIRTUAL_PORT=80
    networks:
      - net

  core:
    container_name: vanne-api
    image: vanne-api:prod
    restart: always
    depends_on:
      - db
      - redis
    environment:
      - APP_PORT=17001
      - DB_HOST=vanne-db
      - DB_USER=${MONGO_ROOT_USER}
      - DB_PWD=${MONGO_ROOT_PASSWORD}
      - VIRTUAL_HOST=core.vanne.uno
      - VIRTUAL_PORT=17001
      - LETSENCRYPT_HOST=core.vanne.uno
    networks:
      - net
      - db_network

  db:
    container_name: vanne-db
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    volumes:
      - /home/anclaev/projects/vanne/data/prod/db:/data/db
    restart: always
    networks:
      - net
      - db_network

  redis:
    container_name: vanne-redis
    image: redis:latest
    command: [ 'redis-server', '--bind', 'redis', '--port', '6379' ]
    volumes:
      - /home/anclaev/projects/vanne/data/prod/redis:/data
    restart: always
    networks:
      - db_network

networks:
  net:
    external: true

  db_network:
    driver: bridge

volumes:
  data: {}
